2023-09-16 18:49:13,636{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 99ccc4ca4d1d4a7c705ca61d8bdf45347c367ae0 (plus uncommitted changes)
2023-09-16 18:49:13,636{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w echo --bin ./target/debug/gossip-glomers-rs
2023-09-16 18:49:13,674{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count nil
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x5cf4c93"
         "maelstrom.db$db$reify__16142@5cf4c93"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "echo"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x746cb25d" "2023-09-16T18:49:13.620+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x4b9187de"
         "maelstrom.net$jepsen_net$reify__15251@4b9187de"]
 :client
 #object[maelstrom.workload.echo$client$reify__16863
         "0x7c068c7b"
         "maelstrom.workload.echo$client$reify__16863@7c068c7b"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x31906cb2"
         "java.util.concurrent.CyclicBarrier@31906cb2"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 5
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x207fce87"
         "jepsen.checker$compose$reify__11881@207fce87"]
 :argv ("test" "-w" "echo" "--bin" "./target/debug/gossip-glomers-rs")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@67171221"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@2f3a3fec"]})
 :nodes ["n1" "n2" "n3" "n4" "n5"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "./target/debug/gossip-glomers-rs"
 :generator
 (jepsen.generator.TimeLimit
  {:limit 60000000000,
   :cutoff nil,
   :gen (jepsen.generator.Any
         {:gens [(jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x365ad794"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@365ad794"],
                   :gen nil})
                 (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                           "0x4471f216"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__9167@4471f216"],
                   :gen (jepsen.generator.Stagger
                         {:dt 400000000,
                          :next-time nil,
                          :gen (jepsen.generator.EachThread
                                {:fresh-gen #object[maelstrom.workload.echo$workload$fn__16882
                                                    "0x4528a8bf"
                                                    "maelstrom.workload.echo$workload$fn__16882@4528a8bf"],
                                 :context-filters #object[clojure.core$promise$reify__8591
                                                          "0x1927c2c6"
                                                          {:status :pending,
                                                           :val nil}],
                                 :gens {}})})})]})})
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x79a15001"
         "maelstrom.net$jepsen_os$reify__15254@79a15001"]
 :time-limit 60
 :workload :echo
 :consistency-models [:strict-serializable]
 :topology :grid}

2023-09-16 18:49:14,812{GMT}	INFO	[jepsen node n1] maelstrom.net: Starting Maelstrom network
2023-09-16 18:49:14,813{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2023-09-16 18:49:14,817{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2023-09-16 18:49:14,819{GMT}	INFO	[jepsen node n5] maelstrom.db: Setting up n5
2023-09-16 18:49:14,819{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2023-09-16 18:49:14,819{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2023-09-16 18:49:14,819{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2023-09-16 18:49:14,821{GMT}	INFO	[jepsen node n5] maelstrom.process: launching ./target/debug/gossip-glomers-rs []
2023-09-16 18:49:14,821{GMT}	INFO	[jepsen node n2] maelstrom.process: launching ./target/debug/gossip-glomers-rs []
2023-09-16 18:49:14,821{GMT}	INFO	[jepsen node n4] maelstrom.process: launching ./target/debug/gossip-glomers-rs []
2023-09-16 18:49:14,821{GMT}	INFO	[jepsen node n3] maelstrom.process: launching ./target/debug/gossip-glomers-rs []
2023-09-16 18:49:14,821{GMT}	INFO	[jepsen node n1] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2023-09-16 18:49:14,823{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2023-09-16 18:49:14,825{GMT}	INFO	[jepsen node n1] maelstrom.process: launching ./target/debug/gossip-glomers-rs []
2023-09-16 18:49:24,842{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2023-09-16 18:49:24,843{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2023-09-16 18:49:24,845{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2023-09-16 18:49:24,845{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2023-09-16 18:49:24,845{GMT}	INFO	[jepsen node n5] maelstrom.db: Tearing down n5
2023-09-16 18:49:25,843{GMT}	INFO	[jepsen node n1] maelstrom.net: Shutting down Maelstrom network
2023-09-16 18:49:25,846{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n3 crashed with exit status 101. Before crashing, it wrote to STDOUT:



And to STDERR:

thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error("unknown variant `id`, expected `EchoRequest`", line: 1, column: 5)', src/node.rs:15:66
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

Full STDERR logs are available in /home/perseus/personal/gossip-glomers-rs/store/echo/20230916T184913.620+0530/node-logs/n3.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:829)
